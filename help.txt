RastaConverter by Jakub 'Ilmenit' Debski

Usage:
RastaConverter.exe InputFile [options]

To save the output during the optimization process, press the 's' key.

Copy created output files to the directory Generator or GeneratorDual (for dual mode) and run 'build.bat' to create executable file.

The application displays three images:
- the left one is the original picture resized to Atari width.
- the right one is the original picture mapped to chosen Atari palette. This is our goal to reach.
- the central one is a preview of the output picture.

If the colors on the right image are wrong (e.g. too gray) then try a different palette file
or remap original picture to chosen palette file using other another tool e.g. Timanthes.
Below on the screen are some statistics from the optimization process.
With the current algorithm the longer you wait, the better results you get. 
For some pictures, more than 1 million evaluations are needed to get really good results.
Some users wait set high /s and wait 1+ billion evaluations to get the best quality output.

Dual-frame mode (two frames A/B alternating):
- Enable with /dual (or --dual=on). 
- Bootstrap A for /first_dual_steps evaluations, then B (copy A or generate fresh) for /first_dual_steps (if /after_dual_steps=generate)
- Alternate optimizing A/B every /altering_dual_steps evaluations
- In dual mode, the central preview shows:
  - A, B, or Mixed (blended) â€” toggle with keys: [A], [B], [M]
  - Status lines under stats: Optimizing: A|B; Showing: A|B|M; Press [A] [B] [M]ix
- Note: Mutation statistics are shown only in single-frame mode (hidden in dual mode)
  - Optimizer and history: /opt (lahc|dlas) and /s (history length) work exactly the same as in single-frame mode; dual mode uses the same acceptance logic and history

Command line options (accept '/', '-' or '--' prefixes; aliases included under each option):

General options:

/o=Output File
  Output file names. The default names are 'output.*' and 'out_dual.*' in dual mode.
  Using a different name you have to change the file names used in the Generator.
  Aliases: -o, --output

/threads=number of threads
  Set number of processing threads running in parallel (1 to your number of cores).
  Aliases: /t, --threads

/max_evals=Maximum number of evaluations
  RastaConverter will save the current solution and exit when this limit is reached.
  Aliases: /me, --max_evals

/save=number of solutions or auto
  Default: auto
  To disable set: 0
  Saves best solution after every 'n' evaluations. When 'auto' is used then 'n' is dynamically calculated according to conversion ratio to save each 30 seconds.
  This is useful for a long-run optimizations, when the run can be stopped by power outage for example. If you run many instances of RastaConverter /o option may be useful.
  Aliases: --save

/continue
  Continue previously stopped process. Currently it uses previously generated files (output*.*) therefore
  be careful not to overwrite them with other instance of RastaConverter. 
  Aliases: --continue
  Notes:
  - Respects the current /output value. If you used /o=custom.png earlier, resume will look for
    custom.png.rp[.ini]/.optstate (single) or out_dual_A/B.rp[.ini] in the same directory (dual).
  - In dual mode, resume automatically loads A and B if present; otherwise falls back to single-frame.

/preprocess
  If this switch exists then RastaConverter generates and saves only destination picture.
  Aliases: --preprocess

/quiet
  Headless/quiet mode (no GUI).
  Aliases: -q, --quiet

/seed = seed for the random number generator
  Aliases: --seed

Input:

/i=Input File
  File to process. All the formats of the FreeImage library supported, including JPG, PNG, GIF and BMP.
  Warning: it is not possible to load 16 colors pictures (4 bits per pixel). Increase the color depth first
  using other graphics program.
  Aliases: -i, --input

/h=Output Height
  Default: Proportional to picture size rescaled to 320xheight or 240.
  Generated file height. The speed of the optimization process depends on the height.
  Aliases: -h
  
/pal=Palette File
  Default: Palettes\laoo.act
  The output quality depends a lot on similarity between chosen Atari palette and the image palette.
  The default palette covers a large color range and is close to real Atari palette.
  You can also use shortcuts: /pal=laoo and the converter will try to load palette from 'Palettes\laoo.act'
  Note: Using /palette without a value implies the default Palettes\laoo.act
  Aliases: -pal, --palette
  
/dither=Dithering Type
  Possible dithering types are: chess, floyd, 2d, jarvis, simple, knoll
  'chess' is Chessboard Dithering - typical 8bit dithering technique
  'floyd' is Floyd-Steinberg dithering - more "random" than chessboard dithering
  '2d' and 'simple' are between chess and floyd.
  'jarvis' dithering is more artistic
  'knoll' is similar to Adobe patented pattern dithering algorithm. Very slow with /predistance=ciede (which is default!).
  'line' dithering that tries to keep a low number of color changes on the line
  'line2' similar to 'line'
  Aliases: --dither

/dither_val=Dithering strength
  Default: 1, should be set from 0.0 to 3.0. 
  Some dithering algorithms set to /dither_val=2 may increase color saturation if the output picture is too gray.
  Aliases: --dither_val

/dither_rand=Dithering randomness
  Default: 0, should be set from 0.0 to 1.0
  Current implementation of dithering algorithm produces output which may look too patterned.
  Set /dither_rand to 0.5 or 1.0 to make output more random.
  Aliases: --dither_rand

/details=Details picture
  To help the optimization algorithm you can set the details mask. 
  The brighter the color on the mask is, the higher is distance of the color difference between input and output file on the masked region.
  This way you can make some objects like faces, eyes or other small objects more detailed.
  Aliases: --details

/details_val=Details influence strength
  Default: 1
  Aliases: --details_val

/filter=Resize filter
  Default: box
  Filter used to resize the picture to the Atari width=160 color pixels (40 bytes). 
	Possible filters are: lanczos, box, bicubic, bilinear, bspline, catmullrom
  Aliases: --filter

/brightness=[-100,100]
  Default: 0
  Brightness color correction.
  Aliases: --brightness

/contrast=[-100,100]
  Default: 0
  Contrast color correction.
  Aliases: --contrast

/gamma=[0.0-8.0]
  Default: 1.0
  Gamma color correction.
  Aliases: --gamma

/init=Initial optimization state
   Default: random
   The optimization search space is large and the final results depends a lot on the initial values.
   You may see that RastaConverter sometimes optimizes not those details of the picture that you want.
   To change the initial value you may use other states: random, empty, less, smart
   
   '/init=less' option sets less colors in the initial state of the picture. This gives better result
   quick, but then picture is harder to optimize than with /init=smart 
  Aliases: --init

/s or --solutions=History length
  History length used by the optimizer (DLAS or LAHC).
  With /s=1 (default) the optimization algorithm is simple hill climbing.
  With larger values, acceptance uses a history window which significantly improves exploration.
  For DLAS, small values like /s=3..5 often work very well.
  Aliases: /s, --solutions
 
 /opt or --optimizer=lahc|dlas
  Select optimization algorithm. Default: lahc
  - lahc: Late Acceptance Hill Climbing (default)
  - dlas: Diversified Late Acceptance Search
  Aliases: --opt, --optimizer
  
/distance=Color distance function
  Default: yuv, other options: euclid, ciede
 
  euclid - Use Euclidian RGB distance for colors instead of default YUV distance. This function is fast.
  yuv - produces usually better color mapping than Euclidian, but for some pictures RGB distance is also useful.
  ciede - uses the best visual color distance algorithm CIEDE2000, but can be very slow.
  Aliases: --distance

/predistance=Color distance function for preprocess
  Default: ciede, other options: euclid, yuv

  This option sets the preprocess color distance function to create destination picture.
  For the rest of the optimization the distance set by the /distance is used.
  The default option /predistance=ciede is VERY slow with Knoll dithering.
  Aliases: --predistance
    
/max_evals=Maximum number of evaluations
  RastaConverter will save the current solution and exit when this limit is reached.
  Aliases: /me, --max_evals

/onoff=OnOff File
  Text file that describes where to turn on and turn off usable registers. The format of each line in "OnOff file" is:

REGISTER OFF|ON FROM TO

  REGISTER is one of the following registers: COLOR0,COLOR1,COLOR2,COLBAK,COLPM0,COLPM1,COLPM2,COLPM3,HPOSP0,HPOSP1,HPOSP2,HPOSP3
  OFF turns off the usage of registers in lines, ON turns on. ON is default for all the registers in the whole picture.
  FROM is line number in picture starting from 0
  TO is line number in picture up to Picture Height-1
  Aliases: --onoff

  Every line in "OnOff file" is processed one after another.

  Example:
  To turn off usage of player 0 and player 1 in picture of height 240 pixels use the following OnOff file:

COLPM0 OFF 0 239
HPOSP0 OFF 0 239
COLPM1 OFF 0 239
HPOSP1 OFF 0 239

/preprocess
  If this switch exists then RastaConverter generates and saves only destination picture.
  Aliases: --preprocess

/seed = seed for the random number generator
  Aliases: --seed

Image processing:

/cache=number
  Default: 64
  Sets number of megabytes per thread to use as memory buffer to speed up conversion.
  Aliases: --cache
   
Dual-frame mode:

/dual
  Enable dual-frame optimization mode (two alternating frames A/B blending). Default: off
  Aliases: /dual, --dual

/first_dual_steps=<N>
  Number of evaluations in initial bootstrap for frame A (and B if /after_dual_steps=generate). Default: 100000
  Aliases: /fds, --first_dual_steps

/after_dual_steps=copy|generate
  After A bootstrap: copy A to B (copy), or generate B from fresh random init and bootstrap it for /first_dual_steps (generate). Default: copy
  Aliases: /ads, --after_dual_steps

/altering_dual_steps=<N>
  Number of evaluations per alternation block during dual Stage 3. Default: 50000
  Aliases: /alts, --altering_dual_steps

/dual_blending=yuv|rgb
  Blending color space for preview/export in dual mode. Default: yuv
  Aliases: /db, --dual_blending

/dual_luma=<FLOAT>
  Temporal luma penalty weight in dual mode. Higher values reduce flicker by forcing A and B to be closer in brightness; lower values allow more alternation range. Default: 0.2
  Aliases: /dl, --dual_luma

/dual_chroma=<FLOAT>
  Temporal chroma penalty weight in dual mode. Higher values reduce color flicker; lower values preserve more color variety. Default: 0.1
  Aliases: /dc, --dual_chroma

Example:
RastaConverter.exe c64.png /threads=8 /s=5 /opt=lahc


